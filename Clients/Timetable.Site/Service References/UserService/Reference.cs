//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Timetable.Site.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Auditorium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.AuditoriumType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Building))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.ScheduleInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Course))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Faculty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Branch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Speciality))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Lecturer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Position))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Schedule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Time))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.WeekType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.StudyYear))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.Tutorial))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.TutorialType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Timetable.Site.UserService.UserRole))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActual {
            get {
                return this.IsActualField;
            }
            set {
                if ((this.IsActualField.Equals(value) != true)) {
                    this.IsActualField = value;
                    this.RaisePropertyChanged("IsActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auditorium", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Auditorium : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuditoriumTypIdeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.AuditoriumType AuditoriumTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Building BuildingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.TutorialType[] TutorialApplicabilitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuditoriumTypIde {
            get {
                return this.AuditoriumTypIdeField;
            }
            set {
                if ((this.AuditoriumTypIdeField.Equals(value) != true)) {
                    this.AuditoriumTypIdeField = value;
                    this.RaisePropertyChanged("AuditoriumTypIde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.AuditoriumType AuditoriumType {
            get {
                return this.AuditoriumTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditoriumTypeField, value) != true)) {
                    this.AuditoriumTypeField = value;
                    this.RaisePropertyChanged("AuditoriumType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Building Building {
            get {
                return this.BuildingField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingField, value) != true)) {
                    this.BuildingField = value;
                    this.RaisePropertyChanged("Building");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuildingId {
            get {
                return this.BuildingIdField;
            }
            set {
                if ((this.BuildingIdField.Equals(value) != true)) {
                    this.BuildingIdField = value;
                    this.RaisePropertyChanged("BuildingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoes {
            get {
                return this.ScheduleInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoesField, value) != true)) {
                    this.ScheduleInfoesField = value;
                    this.RaisePropertyChanged("ScheduleInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.TutorialType[] TutorialApplicabilities {
            get {
                return this.TutorialApplicabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.TutorialApplicabilitiesField, value) != true)) {
                    this.TutorialApplicabilitiesField = value;
                    this.RaisePropertyChanged("TutorialApplicabilities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditoriumType", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AuditoriumType : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Auditorium[] AuditoriumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Auditorium[] Auditoriums {
            get {
                return this.AuditoriumsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditoriumsField, value) != true)) {
                    this.AuditoriumsField = value;
                    this.RaisePropertyChanged("Auditoriums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Building", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Building : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleInfo", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ScheduleInfo : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Course[] CoursesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Faculty[] FacultiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Group[] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursPerWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Lecturer LecturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LecturerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Auditorium[] LikeAuditoriumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Schedule[] SchedulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SemesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Speciality[] SpecialitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.StudyYear StudyYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudyYearIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubgroupCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Tutorial TutorialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TutorialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.TutorialType TutorialTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TutorialTypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Course[] Courses {
            get {
                return this.CoursesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoursesField, value) != true)) {
                    this.CoursesField = value;
                    this.RaisePropertyChanged("Courses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Faculty[] Faculties {
            get {
                return this.FacultiesField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultiesField, value) != true)) {
                    this.FacultiesField = value;
                    this.RaisePropertyChanged("Faculties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Group[] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoursPerWeek {
            get {
                return this.HoursPerWeekField;
            }
            set {
                if ((this.HoursPerWeekField.Equals(value) != true)) {
                    this.HoursPerWeekField = value;
                    this.RaisePropertyChanged("HoursPerWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Lecturer Lecturer {
            get {
                return this.LecturerField;
            }
            set {
                if ((object.ReferenceEquals(this.LecturerField, value) != true)) {
                    this.LecturerField = value;
                    this.RaisePropertyChanged("Lecturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LecturerId {
            get {
                return this.LecturerIdField;
            }
            set {
                if ((this.LecturerIdField.Equals(value) != true)) {
                    this.LecturerIdField = value;
                    this.RaisePropertyChanged("LecturerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Auditorium[] LikeAuditoriums {
            get {
                return this.LikeAuditoriumsField;
            }
            set {
                if ((object.ReferenceEquals(this.LikeAuditoriumsField, value) != true)) {
                    this.LikeAuditoriumsField = value;
                    this.RaisePropertyChanged("LikeAuditoriums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Schedule[] Schedules {
            get {
                return this.SchedulesField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedulesField, value) != true)) {
                    this.SchedulesField = value;
                    this.RaisePropertyChanged("Schedules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Semester {
            get {
                return this.SemesterField;
            }
            set {
                if ((this.SemesterField.Equals(value) != true)) {
                    this.SemesterField = value;
                    this.RaisePropertyChanged("Semester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Speciality[] Specialities {
            get {
                return this.SpecialitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialitiesField, value) != true)) {
                    this.SpecialitiesField = value;
                    this.RaisePropertyChanged("Specialities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.StudyYear StudyYear {
            get {
                return this.StudyYearField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyYearField, value) != true)) {
                    this.StudyYearField = value;
                    this.RaisePropertyChanged("StudyYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudyYearId {
            get {
                return this.StudyYearIdField;
            }
            set {
                if ((this.StudyYearIdField.Equals(value) != true)) {
                    this.StudyYearIdField = value;
                    this.RaisePropertyChanged("StudyYearId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubgroupCount {
            get {
                return this.SubgroupCountField;
            }
            set {
                if ((this.SubgroupCountField.Equals(value) != true)) {
                    this.SubgroupCountField = value;
                    this.RaisePropertyChanged("SubgroupCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Tutorial Tutorial {
            get {
                return this.TutorialField;
            }
            set {
                if ((object.ReferenceEquals(this.TutorialField, value) != true)) {
                    this.TutorialField = value;
                    this.RaisePropertyChanged("Tutorial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TutorialId {
            get {
                return this.TutorialIdField;
            }
            set {
                if ((this.TutorialIdField.Equals(value) != true)) {
                    this.TutorialIdField = value;
                    this.RaisePropertyChanged("TutorialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.TutorialType TutorialType {
            get {
                return this.TutorialTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TutorialTypeField, value) != true)) {
                    this.TutorialTypeField = value;
                    this.RaisePropertyChanged("TutorialType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TutorialTypeId {
            get {
                return this.TutorialTypeIdField;
            }
            set {
                if ((this.TutorialTypeIdField.Equals(value) != true)) {
                    this.TutorialTypeIdField = value;
                    this.RaisePropertyChanged("TutorialTypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Course", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Course : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoes {
            get {
                return this.ScheduleInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoesField, value) != true)) {
                    this.ScheduleInfoesField = value;
                    this.RaisePropertyChanged("ScheduleInfoes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Department : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Faculty FacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FacultyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Lecturer[] LecturersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Faculty Faculty {
            get {
                return this.FacultyField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyField, value) != true)) {
                    this.FacultyField = value;
                    this.RaisePropertyChanged("Faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FacultyId {
            get {
                return this.FacultyIdField;
            }
            set {
                if ((this.FacultyIdField.Equals(value) != true)) {
                    this.FacultyIdField = value;
                    this.RaisePropertyChanged("FacultyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Lecturer[] Lecturers {
            get {
                return this.LecturersField;
            }
            set {
                if ((object.ReferenceEquals(this.LecturersField, value) != true)) {
                    this.LecturersField = value;
                    this.RaisePropertyChanged("Lecturers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Faculty", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Faculty : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Branch BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BranchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Speciality[] SpecialitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Branch Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BranchId {
            get {
                return this.BranchIdField;
            }
            set {
                if ((this.BranchIdField.Equals(value) != true)) {
                    this.BranchIdField = value;
                    this.RaisePropertyChanged("BranchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoes {
            get {
                return this.ScheduleInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoesField, value) != true)) {
                    this.ScheduleInfoesField = value;
                    this.RaisePropertyChanged("ScheduleInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Speciality[] Specialities {
            get {
                return this.SpecialitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialitiesField, value) != true)) {
                    this.SpecialitiesField = value;
                    this.RaisePropertyChanged("Specialities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Branch", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Branch : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Faculty[] FacultiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Faculty[] Faculties {
            get {
                return this.FacultiesField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultiesField, value) != true)) {
                    this.FacultiesField = value;
                    this.RaisePropertyChanged("Faculties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Speciality", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Speciality : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Faculty[] FacultiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Group[] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Faculty[] Faculties {
            get {
                return this.FacultiesField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultiesField, value) != true)) {
                    this.FacultiesField = value;
                    this.RaisePropertyChanged("Faculties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Group[] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoes {
            get {
                return this.ScheduleInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoesField, value) != true)) {
                    this.ScheduleInfoesField = value;
                    this.RaisePropertyChanged("ScheduleInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Group : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Course CourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Group ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Speciality SpecialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpecialityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StudentsCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Course Course {
            get {
                return this.CourseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseField, value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseId {
            get {
                return this.CourseIdField;
            }
            set {
                if ((this.CourseIdField.Equals(value) != true)) {
                    this.CourseIdField = value;
                    this.RaisePropertyChanged("CourseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Group Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoes {
            get {
                return this.ScheduleInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoesField, value) != true)) {
                    this.ScheduleInfoesField = value;
                    this.RaisePropertyChanged("ScheduleInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Speciality Speciality {
            get {
                return this.SpecialityField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialityField, value) != true)) {
                    this.SpecialityField = value;
                    this.RaisePropertyChanged("Speciality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecialityId {
            get {
                return this.SpecialityIdField;
            }
            set {
                if ((this.SpecialityIdField.Equals(value) != true)) {
                    this.SpecialityIdField = value;
                    this.RaisePropertyChanged("SpecialityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentsCount {
            get {
                return this.StudentsCountField;
            }
            set {
                if ((this.StudentsCountField.Equals(value) != true)) {
                    this.StudentsCountField = value;
                    this.RaisePropertyChanged("StudentsCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lecturer", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Lecturer : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Department[] DepartmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddlenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Position[] PositionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contacts {
            get {
                return this.ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactsField, value) != true)) {
                    this.ContactsField = value;
                    this.RaisePropertyChanged("Contacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Department[] Departments {
            get {
                return this.DepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentsField, value) != true)) {
                    this.DepartmentsField = value;
                    this.RaisePropertyChanged("Departments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Middlename {
            get {
                return this.MiddlenameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddlenameField, value) != true)) {
                    this.MiddlenameField = value;
                    this.RaisePropertyChanged("Middlename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Position[] Positions {
            get {
                return this.PositionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionsField, value) != true)) {
                    this.PositionsField = value;
                    this.RaisePropertyChanged("Positions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoes {
            get {
                return this.ScheduleInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoesField, value) != true)) {
                    this.ScheduleInfoesField = value;
                    this.RaisePropertyChanged("ScheduleInfoes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Position : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Lecturer[] LecturersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Lecturer[] Lecturers {
            get {
                return this.LecturersField;
            }
            set {
                if ((object.ReferenceEquals(this.LecturersField, value) != true)) {
                    this.LecturersField = value;
                    this.RaisePropertyChanged("Lecturers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Schedule : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Auditorium AuditoriumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AuditoriumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Time PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo ScheduleInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.WeekType WeekTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeekTypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Auditorium Auditorium {
            get {
                return this.AuditoriumField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditoriumField, value) != true)) {
                    this.AuditoriumField = value;
                    this.RaisePropertyChanged("Auditorium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AuditoriumId {
            get {
                return this.AuditoriumIdField;
            }
            set {
                if ((this.AuditoriumIdField.Equals(value) != true)) {
                    this.AuditoriumIdField = value;
                    this.RaisePropertyChanged("AuditoriumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoDelete {
            get {
                return this.AutoDeleteField;
            }
            set {
                if ((this.AutoDeleteField.Equals(value) != true)) {
                    this.AutoDeleteField = value;
                    this.RaisePropertyChanged("AutoDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayOfWeek {
            get {
                return this.DayOfWeekField;
            }
            set {
                if ((this.DayOfWeekField.Equals(value) != true)) {
                    this.DayOfWeekField = value;
                    this.RaisePropertyChanged("DayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Time Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodField, value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodId {
            get {
                return this.PeriodIdField;
            }
            set {
                if ((this.PeriodIdField.Equals(value) != true)) {
                    this.PeriodIdField = value;
                    this.RaisePropertyChanged("PeriodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo ScheduleInfo {
            get {
                return this.ScheduleInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoField, value) != true)) {
                    this.ScheduleInfoField = value;
                    this.RaisePropertyChanged("ScheduleInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleInfoId {
            get {
                return this.ScheduleInfoIdField;
            }
            set {
                if ((this.ScheduleInfoIdField.Equals(value) != true)) {
                    this.ScheduleInfoIdField = value;
                    this.RaisePropertyChanged("ScheduleInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.WeekType WeekType {
            get {
                return this.WeekTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WeekTypeField, value) != true)) {
                    this.WeekTypeField = value;
                    this.RaisePropertyChanged("WeekType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeekTypeId {
            get {
                return this.WeekTypeIdField;
            }
            set {
                if ((this.WeekTypeIdField.Equals(value) != true)) {
                    this.WeekTypeIdField = value;
                    this.RaisePropertyChanged("WeekTypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Time", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Time : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Building BuildingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan StartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Building Building {
            get {
                return this.BuildingField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingField, value) != true)) {
                    this.BuildingField = value;
                    this.RaisePropertyChanged("Building");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuildingId {
            get {
                return this.BuildingIdField;
            }
            set {
                if ((this.BuildingIdField.Equals(value) != true)) {
                    this.BuildingIdField = value;
                    this.RaisePropertyChanged("BuildingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeekType", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class WeekType : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyYear", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StudyYear : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartYearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartYear {
            get {
                return this.StartYearField;
            }
            set {
                if ((this.StartYearField.Equals(value) != true)) {
                    this.StartYearField = value;
                    this.RaisePropertyChanged("StartYear");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tutorial", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Tutorial : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Faculty FacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FacultyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Speciality SpecialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SpecialityIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Faculty Faculty {
            get {
                return this.FacultyField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyField, value) != true)) {
                    this.FacultyField = value;
                    this.RaisePropertyChanged("Faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FacultyId {
            get {
                return this.FacultyIdField;
            }
            set {
                if ((this.FacultyIdField.Equals(value) != true)) {
                    this.FacultyIdField = value;
                    this.RaisePropertyChanged("FacultyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.ScheduleInfo[] ScheduleInfoes {
            get {
                return this.ScheduleInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleInfoesField, value) != true)) {
                    this.ScheduleInfoesField = value;
                    this.RaisePropertyChanged("ScheduleInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Speciality Speciality {
            get {
                return this.SpecialityField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialityField, value) != true)) {
                    this.SpecialityField = value;
                    this.RaisePropertyChanged("Speciality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SpecialityId {
            get {
                return this.SpecialityIdField;
            }
            set {
                if ((this.SpecialityIdField.Equals(value) != true)) {
                    this.SpecialityIdField = value;
                    this.RaisePropertyChanged("SpecialityId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TutorialType", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Scheduler", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TutorialType : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Auditorium[] AuditoriumApplicabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Auditorium[] AuditoriumApplicabilities {
            get {
                return this.AuditoriumApplicabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditoriumApplicabilitiesField, value) != true)) {
                    this.AuditoriumApplicabilitiesField = value;
                    this.RaisePropertyChanged("AuditoriumApplicabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Personalization", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class User : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.UserRole RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Base.Entities.Personalization", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class UserRole : Timetable.Site.UserService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Host.Interfaces")]
    [System.SerializableAttribute()]
    public partial class OperationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.BaseEntity ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Timetable.Site.UserService.Status StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.BaseEntity Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Timetable.Site.UserService.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Timetable.Host.Interfaces")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Add", ReplyAction="http://tempuri.org/IBaseService/AddResponse")]
        Timetable.Site.UserService.OperationResult Add(Timetable.Site.UserService.BaseEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Add", ReplyAction="http://tempuri.org/IBaseService/AddResponse")]
        System.Threading.Tasks.Task<Timetable.Site.UserService.OperationResult> AddAsync(Timetable.Site.UserService.BaseEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Update", ReplyAction="http://tempuri.org/IBaseService/UpdateResponse")]
        Timetable.Site.UserService.OperationResult Update(Timetable.Site.UserService.BaseEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Update", ReplyAction="http://tempuri.org/IBaseService/UpdateResponse")]
        System.Threading.Tasks.Task<Timetable.Site.UserService.OperationResult> UpdateAsync(Timetable.Site.UserService.BaseEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Delete", ReplyAction="http://tempuri.org/IBaseService/DeleteResponse")]
        Timetable.Site.UserService.OperationResult Delete(Timetable.Site.UserService.BaseEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Delete", ReplyAction="http://tempuri.org/IBaseService/DeleteResponse")]
        System.Threading.Tasks.Task<Timetable.Site.UserService.OperationResult> DeleteAsync(Timetable.Site.UserService.BaseEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidateUser", ReplyAction="http://tempuri.org/IUserService/ValidateUserResponse")]
        bool ValidateUser(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ValidateUser", ReplyAction="http://tempuri.org/IUserService/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByLogin", ReplyAction="http://tempuri.org/IUserService/GetUserByLoginResponse")]
        Timetable.Site.UserService.User GetUserByLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByLogin", ReplyAction="http://tempuri.org/IUserService/GetUserByLoginResponse")]
        System.Threading.Tasks.Task<Timetable.Site.UserService.User> GetUserByLoginAsync(string login);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Timetable.Site.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Timetable.Site.UserService.IUserService>, Timetable.Site.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Timetable.Site.UserService.OperationResult Add(Timetable.Site.UserService.BaseEntity entity) {
            return base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task<Timetable.Site.UserService.OperationResult> AddAsync(Timetable.Site.UserService.BaseEntity entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public Timetable.Site.UserService.OperationResult Update(Timetable.Site.UserService.BaseEntity entity) {
            return base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task<Timetable.Site.UserService.OperationResult> UpdateAsync(Timetable.Site.UserService.BaseEntity entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public Timetable.Site.UserService.OperationResult Delete(Timetable.Site.UserService.BaseEntity entity) {
            return base.Channel.Delete(entity);
        }
        
        public System.Threading.Tasks.Task<Timetable.Site.UserService.OperationResult> DeleteAsync(Timetable.Site.UserService.BaseEntity entity) {
            return base.Channel.DeleteAsync(entity);
        }
        
        public bool ValidateUser(string login, string password) {
            return base.Channel.ValidateUser(login, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string login, string password) {
            return base.Channel.ValidateUserAsync(login, password);
        }
        
        public Timetable.Site.UserService.User GetUserByLogin(string login) {
            return base.Channel.GetUserByLogin(login);
        }
        
        public System.Threading.Tasks.Task<Timetable.Site.UserService.User> GetUserByLoginAsync(string login) {
            return base.Channel.GetUserByLoginAsync(login);
        }
    }
}
