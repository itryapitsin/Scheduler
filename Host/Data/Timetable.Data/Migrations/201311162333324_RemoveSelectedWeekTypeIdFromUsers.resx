<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Target" xml:space="preserve">
    <value>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</value>
  </data>
</root>